version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: gardens-net-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: gardens_net
      POSTGRES_USER: gardens_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-gardens_secure_password_2024}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - gardens-net

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: gardens-net-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_secure_password_2024}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - gardens-net

  # Main Application
  app:
    build: .
    container_name: gardens-net-app
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    environment:
      # Database Configuration
      DATABASE_URL: postgresql://gardens_user:${DB_PASSWORD:-gardens_secure_password_2024}@postgres:5432/gardens_net
      
      # Redis Configuration
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis_secure_password_2024}@redis:6379
      
      # Application Settings
      NEXT_PUBLIC_BASE_URL: ${BASE_URL:-http://localhost:3000}
      NODE_ENV: production
      
      # MikPos Integration
      MIKPOS_BASE_URL: ${MIKPOS_BASE_URL:-http://192.168.1.100:8080}
      MIKPOS_API_KEY: ${MIKPOS_API_KEY}
      MIKPOS_WEBHOOK_SECRET: ${MIKPOS_WEBHOOK_SECRET}
      
      # WhatsApp Business API
      WHATSAPP_ACCESS_TOKEN: ${WHATSAPP_ACCESS_TOKEN}
      WHATSAPP_PHONE_NUMBER_ID: ${WHATSAPP_PHONE_NUMBER_ID}
      WHATSAPP_WEBHOOK_VERIFY_TOKEN: ${WHATSAPP_WEBHOOK_VERIFY_TOKEN}
      
      # MikroTik RouterOS API
      MIKROTIK_HOST: ${MIKROTIK_HOST:-192.168.1.1}
      MIKROTIK_USERNAME: ${MIKROTIK_USERNAME:-admin}
      MIKROTIK_PASSWORD: ${MIKROTIK_PASSWORD}
      MIKROTIK_PORT: ${MIKROTIK_PORT:-8728}
      
      # Security
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      NEXTAUTH_URL: ${BASE_URL:-http://localhost:3000}
      
    ports:
      - "3000:3000"
    volumes:
      - app_uploads:/app/public/uploads
      - app_logs:/app/logs
    networks:
      - gardens-net

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: gardens-net-nginx
    restart: unless-stopped
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - nginx_logs:/var/log/nginx
    networks:
      - gardens-net

volumes:
  postgres_data:
  redis_data:
  app_uploads:
  app_logs:
  nginx_logs:

networks:
  gardens-net:
    driver: bridge
